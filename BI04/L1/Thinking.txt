Thinking1	既然内容相似度计算简单，能频繁更新，为什么还需要协同过滤算法呢？

内容相似度，虽然计算简单，但是只能通过单一角度进行推荐，而且是静态的，不能反映客户，需求方的个性化需求。比较由局限性。

协同过滤： 分为协同和过滤两个操作； 利用群体的行为进行推荐，使群体进化到最佳状态；而随数据，行为数据等的增加，推荐会越来越准确。 过滤，是从决策集中找到最满足需求，符合用户要求的决策方案过滤出来。 是一种群体智慧，有统计学的规律。而且相似的物体很大程度上有相似的性质；


				
Thinking2	你需要推荐系统么？哪些情况下不需要推荐系统？
从广义的角度讲，每个人都需要推荐系统。 推荐系统可以帮助人们做出更好的选择。
但是从侠义角度讲， 一些临时的单一的选择，也没有必要花太多时间精力放到选择上。

比如冷启动问题，给新用户推进，新上线了网站，商品等，没有历史行为数据可以使用的时候，就不用花太多时间放在推荐上。 因为此时的第一诉求是解决第一推动力的问题，先试用，使用，然后等有了数据再处理推荐相关的内容，从投入产出的角度看，性价比最高。

				
Thinking3	如果给一个视频打标签，视频中有音乐作为背景音乐，采用了NLP方式对内容自动打标签，可能存在什么问题？	

噪音可能会很大，导致打的标签不够准确。


什么是推荐系统：
using data： 相似度  
solve problems 推荐

Exploit & Explore（利用与探索） 
Exploit:充分利用已有资源
Explore：认识未知的世界

			
Action1	针对mnist数据集进行分类，采用CART决策树（工具使用sklearn中的CART），可以参考课程代码 mnist_lr.py	MNIST	

		
Action2	"员工离职预测In Class Competition
我们有员工的各种统计信息，以及该员工是否已经离职，统计的信息包括了（工资、出差、工作环境满意度、工作投入度、是否加班、是否升职、工资提升比例等）
现在需要你来通过训练数据得出 员工离职预测，并给出你在测试集上的预测结果"	https://www.kaggle.com/c/bi-attrition-prediction/	

在kaggle上提交预测结果。

		
